USE PETSHOP
GO



CREATE TABLE BKP_CONTRATO(

	IDBACKUP INT NOT NULL IDENTITY,
	ID_CONTRATO INT NOT NULL,
	ID_CLIENTE INT NOT NULL,
	ID_PET INT NOT NULL,
	DATAA_EMISSAO DATE NOT NULL,
	EMAIL VARCHAR(30),
	DATAA_VALIDADE DATE NOT NULL,
	TAXA MONEY NOT NULL,
	DATA_CANCELAMENTO DATE








)
GO




--CONSTRAINT 

ALTER TABLE BKP_CONTRATO
ADD CONSTRAINT PK_BKP_CONTRATO
PRIMARY KEY (IDBACKUP)
GO


ALTER TABLE BKP_CONTRATO
ADD CONSTRAINT FK_C_CLIENTE
FOREIGN KEY (ID_CLIENTE)
REFERENCES CLIENTE (IDCLIENTE) 
GO


ALTER TABLE BKP_CONTRATO
ADD CONSTRAINT FK_P_PET
FOREIGN KEY (ID_PET) 
REFERENCES PET (IDPET)
GO


ALTER TABLE BKP_CONTRATO
ADD CONSTRAINT FK_ID_CONTRATO
FOREIGN KEY (ID_CONTRATO)
REFERENCES CONTRATO (IDCONTRATO) 
GO








-- TRIGGERS


CREATE TRIGGER T_BKP_CONTRATO
ON CONTRATO
AFTER INSERT
AS
DECLARE
		@ID_CONTRATO INT,
		@ID_CLIENTE INT,
		@ID_PET INT,
		@DATAA_EMISSAO DATE,
		@EMAIL VARCHAR(30),
		@DATAA_VALIDADE DATE,
		@TAXA MONEY,
		@DATA_CANCELAMENTO DATE

			


BEGIN
				
				SELECT @ID_CONTRATO = IDCONTRATO, @ID_CLIENTE = ID_CLIENTE, @ID_PET = ID_PET, @DATAA_EMISSAO = DATAA_EMISSAO,
				@EMAIL = EMAIL, @DATAA_VALIDADE = DATAA_VALIDADE, @TAXA = TAXA, 
				@DATA_CANCELAMENTO = DATA_CANCELAMENTO FROM inserted
				


				INSERT INTO BKP_CONTRATO  VALUES (@ID_CONTRATO, @ID_CLIENTE, @ID_PET, @DATAA_EMISSAO,@EMAIL,@DATAA_VALIDADE,
										@TAXA, @DATA_CANCELAMENTO)


					PRINT 'CONTRATO INSERIDO NO BACKUP COM SUCESSO'


	
			


END
GO




CREATE TRIGGER T_ATUALIZA_TAXA
ON CONTRATO
AFTER UPDATE
AS
DECLARE
		@IDCONTRATO INT,
		@DATA_CANCELAMENTO DATE,
		@TAXA MONEY,
		@DATA_VALIDADE DATE




BEGIN




	SELECT @IDCONTRATO = IDCONTRATO, @DATA_VALIDADE = DATAA_VALIDADE, @TAXA = TAXA,
	@DATA_CANCELAMENTO = DATA_CANCELAMENTO FROM inserted



																				
	
	IF @DATA_CANCELAMENTO IS NOT NULL AND @DATA_CANCELAMENTO > @DATA_VALIDADE 

	BEGIN

	DECLARE @DIASATRASADOS INT

	SET @DIASATRASADOS = DATEDIFF (DAY, @DATA_VALIDADE, @DATA_CANCELAMENTO)

	SET @TAXA = @DIASATRASADOS * 50

	UPDATE CONTRATO SET TAXA = @TAXA WHERE IDCONTRATO = @IDCONTRATO
	
	
	PRINT 'TAXA ATUALIZADA COM SUCESSO'

	UPDATE BKP_CONTRATO SET TAXA = @TAXA WHERE ID_CONTRATO = @IDCONTRATO

	PRINT 'TAXA ATUALIZADA COM SUCESSO NO BACKUP'

	UPDATE BKP_CONTRATO SET DATA_CANCELAMENTO = @DATA_CANCELAMENTO WHERE ID_CONTRATO = @IDCONTRATO

	END

	ELSE
	BEGIN

		SET @TAXA = 0
		UPDATE BKP_CONTRATO SET DATA_CANCELAMENTO = @DATA_CANCELAMENTO WHERE ID_CONTRATO = @IDCONTRATO

	END

	

END
GO


DROP TRIGGER T_ATUALIZA_TAXA







--PROCEDURE PARA INSERIR CONTRATO



CREATE PROC P_INSERT_CONTRATO
		
		@ID_CLIENTE INT,
		@ID_PET INT,
		@DATAA_EMISSAO DATE
			

AS
BEGIN

		BEGIN TRANSACTION 

DECLARE 

@EMAIL VARCHAR(30),
@TAXA MONEY,
@DATA_CANCELAMENTO DATE,
@DATAA_VALIDADE DATE


SET @EMAIL = (SELECT EMAIL FROM CLIENTE WHERE IDCLIENTE =  @ID_CLIENTE)

SET @DATAA_VALIDADE = (SELECT  CAST(DATEADD(DAY, 14, GETDATE()) AS DATE))

SET @DATA_CANCELAMENTO = NULL

SET @TAXA = 0


	 INSERT INTO CONTRATO (ID_CLIENTE, ID_PET, DATAA_EMISSAO, EMAIL, DATAA_VALIDADE,
	 TAXA, DATA_CANCELAMENTO) 
	 VALUES (@ID_CLIENTE, @ID_PET, @DATAA_EMISSAO, @EMAIL, @DATAA_VALIDADE,
	 @TAXA, @DATA_CANCELAMENTO)
	


	PRINT 'CONTRATO INSERIDO COM SUCESSO'



	COMMIT TRANSACTION




				
END
GO






--INSERÇÕES





EXEC P_INSERT_CONTRATO 14,4,'20231223'

UPDATE CONTRATO SET DATA_CANCELAMENTO = '20240201' WHERE IDCONTRATO = 27
GO




DELETE BKP_CONTRATO WHERE ID_CLIENTE = 13
GO
DELETE CONTRATO WHERE ID_CLIENTE = 13

SELECT * FROM CLIENTE
SELECT * FROM PET
SELECT * FROM VENDAS
SELECT * FROM PRODUTOS
SELECT * FROM CONTRATO


