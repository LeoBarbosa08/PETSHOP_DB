USE PETSHOP

CREATE TABLE BKP_PET(

IDBACKUP INT NOT NULL IDENTITY,
ID_PET INT NOT NULL,
ESPECIE VARCHAR(30) NOT NULL,
GENERO VARCHAR(30) NOT NULL,
RACA VARCHAR(40) NOT NULL,
IDADE INT NOT NULL,
PESO NUMERIC(10,2) NOT NULL,
ID_DONO INT NOT NULL




)
GO



--CONTRAINTS 

--PK
ALTER TABLE BKP_PET 
ADD CONSTRAINT PK_BKP_PET
PRIMARY KEY (IDBACKUP) 
GO




--FK
ALTER TABLE BKP_PET
ADD CONSTRAINT FK_IDPET
FOREIGN KEY (ID_PET) 
REFERENCES PET(IDPET)
GO


--FK
ALTER TABLE BKP_PET
ADD CONSTRAINT FK_CLIENTE_DONO
FOREIGN KEY (ID_DONO)
REFERENCES CLIENTE(IDCLIENTE) 
GO


SP_HELP BKP_PET





--TRIGGER PARA INSERIR DADOS NO BKP DE PET
CREATE TRIGGER TG_BKP_PET
ON PET
AFTER INSERT 
AS
BEGIN

DECLARE

		@ID_PET INT,
		@ESPECIE VARCHAR(30),
		@GENERO VARCHAR(30),
		@RACA VARCHAR(40),
		@IDADE INT,
		@PESO NUMERIC (10,2),
		@ID_DONO INT

	
		
		SELECT @ID_PET = IDPET, @ESPECIE = ESPECIE, @GENERO = GENERO, @RACA = RACA,
				@IDADE = IDADE, @PESO = PESO, @ID_DONO = ID_DONO FROM inserted


				INSERT INTO BKP_PET (ID_PET, ESPECIE, GENERO, RACA, IDADE, PESO, ID_DONO) 
				VALUES 
				(@ID_PET, @ESPECIE, @GENERO, @RACA, 
				@IDADE, @PESO, @ID_DONO)


				PRINT 'PET INSERIDO NO BACKUP'


END
GO



--PROCEDURE PARA INSERIR DADOS


CREATE PROC P_INSERT_PET
		
		@ESPECIE VARCHAR(30),
		@GENERO VARCHAR(30),
		@RACA VARCHAR(40),
		@IDADE INT,
		@PESO NUMERIC (10,2),
		@ID_DONO INT
AS
BEGIN

		INSERT INTO PET VALUES (@ESPECIE, @GENERO, @RACA, @IDADE, @PESO, @ID_DONO) 


END
GO




EXEC P_INSERT_PET 'GATO' , 'MACHO', 'SIAMESE' , 2 , 4, NULL 


SELECT * FROM BKP_PET
SELECT * FROM PET
SELECT * FROM CLIENTE

DELETE FROM PET WHERE IDPET = 3