USE PETSHOP
GO

--TABELA BACKUP VENDAS


CREATE TABLE BKP_VENDAS(

IDBACKUP INT NOT NULL IDENTITY,
ID_VCLIENTE INT NOT NULL,
ID_VPRODUTO INT NOT NULL,
QUANTIDADE INT NOT NULL,
DATAA_VENDA DATE NOT NULL,
TOTAL MONEY NOT NULL





)


GO
--CONSTRAINTS 



ALTER TABLE BKP_VENDAS
ADD CONSTRAINT PK_IDBACKUP
PRIMARY KEY (IDBACKUP)
GO

ALTER TABLE BKP_VENDAS
ADD CONSTRAINT FK_ID_VCLIENTE
FOREIGN KEY (ID_VCLIENTE)
REFERENCES CLIENTE(IDCLIENTE)
GO



ALTER TABLE BKP_VENDAS
ADD CONSTRAINT FK_ID_VPRODUTO
FOREIGN KEY (ID_VPRODUTO)
REFERENCES PRODUTOS(IDPRODUTO)
GO


--TRIGGER PARA ADICIONAR NAS TABELAS

CREATE TRIGGER T_BKP_VENDAS
ON VENDAS
AFTER INSERT
AS
DECLARE
		
		@ID_VCLIENTE INT,
		@ID_VPRODUTO INT,
		@QUANTIDADE INT,
		@DATAA_VENDA DATE,
		@TOTAL MONEY
		
BEGIN

		SELECT @ID_VCLIENTE = ID_CLIENTE, @ID_VPRODUTO = ID_PRODUTO,  @DATAA_VENDA = DATAA_VENDA,
		@TOTAL = TOTAL , @QUANTIDADE = QUANTIDADE FROM inserted


			INSERT INTO BKP_VENDAS VALUES (@ID_VCLIENTE, @ID_VPRODUTO, @QUANTIDADE, @DATAA_VENDA, @TOTAL)
			PRINT 'VENDA INSERIDA NO BACKUP DE VENDAS COM SUCESSO'
END
GO



DROP TRIGGER T_bkp_VENDAS

--PROCEDURE PARA INSERIR E DAR UPDATE EM PRODUTOS AO INSERIR UMA VENDA


CREATE PROC P_INSERT_VENDAS
	
		@ID_VCLIENTE INT,
		@ID_VPRODUTO INT,
		@QUANTIDADE INT,
		@DATAA_VENDA DATE
		
		

AS
BEGIN

	

	BEGIN TRANSACTION 


DECLARE @ESTOQUE INT, @VERIFICAESTOQUE INT , @NOMEPRODUTO VARCHAR(30)

SET @ESTOQUE = (SELECT SUM(P.ESTOQUE - @QUANTIDADE) FROM PRODUTOS P  WHERE  P.IDPRODUTO = @ID_VPRODUTO)

SET @VERIFICAESTOQUE = (SELECT ESTOQUE FROM PRODUTOS WHERE IDPRODUTO = @ID_VPRODUTO)

SET @NOMEPRODUTO = (SELECT P.nome from produtos P  where idproduto = @ID_VPRODUTO)

IF @VERIFICAESTOQUE < @QUANTIDADE
BEGIN
	PRINT 'ESTOQUE INDISPONIVEL, FAVOR VERIFICAR QUANTIDADE DO PRODUTO ' + @NOMEPRODUTO
	ROLLBACK TRANSACTION 
	RETURN
	END 


UPDATE PRODUTOS SET ESTOQUE = @ESTOQUE WHERE IDPRODUTO = @ID_VPRODUTO

	PRINT 'ESTOQUE ATUALIZADO COM SUCESSO'












DECLARE @TOTAL MONEY

SET @TOTAL = (SELECT P.PRECO* @QUANTIDADE FROM PRODUTOS P WHERE P.IDPRODUTO = @ID_VPRODUTO)


INSERT INTO VENDAS VALUES (@ID_VCLIENTE, @ID_VPRODUTO, @DATAA_VENDA, @TOTAL, @QUANTIDADE)
	
	PRINT 'VENDA INSERIDA COM SUCESSO'
	
	COMMIT TRANSACTION;


END
GO


drop proc P_INSERT_VENDAS







GO

SELECT * FROM VENDAS

SELECT * FROM PRODUTOS

SELECT * FROM BKP_VENDAS














DELETE FROM VENDAS WHERE ID_PRODUTO = 9

update PRODUTOS set ESTOQUE = 100 where IDPRODUTO = 9


DELETE FROM BKP_VENDAS WHERE ID_VCLIENTE = 15



--COMANDO PARA RESETAR IDENTITY
DBCC CHECKIDENT(VENDAS, RESEED, 0)


